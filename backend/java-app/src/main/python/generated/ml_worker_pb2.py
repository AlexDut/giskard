# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ml-worker.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fml-worker.proto\x12\x06worker\x1a\x19google/protobuf/any.proto\" \n\x10LoadModelRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"$\n\x11LoadModelResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\"\xa3\x01\n\x0ePredictRequest\x12\x12\n\nmodel_path\x18\x01 \x01(\t\x12\x36\n\x08\x66\x65\x61tures\x18\x02 \x03(\x0b\x32$.worker.PredictRequest.FeaturesEntry\x1a\x45\n\rFeaturesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12#\n\x05value\x18\x02 \x01(\x0b\x32\x14.google.protobuf.Any:\x02\x38\x01\"\xeb\x01\n\x0fPredictResponse\x12\x18\n\x0eprediction_int\x18\x01 \x01(\x05H\x00\x12\x1a\n\x10prediction_float\x18\x02 \x01(\x02H\x00\x12\x1b\n\x11prediction_string\x18\x03 \x01(\tH\x00\x12\x41\n\rprobabilities\x18\x04 \x03(\x0b\x32*.worker.PredictResponse.ProbabilitiesEntry\x1a\x34\n\x12ProbabilitiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\x42\x0c\n\nprediction2\x8c\x01\n\x08MLWorker\x12\x42\n\tloadModel\x12\x18.worker.LoadModelRequest\x1a\x19.worker.LoadModelResponse\"\x00\x12<\n\x07predict\x12\x16.worker.PredictRequest\x1a\x17.worker.PredictResponse\"\x00\x42(\n\x11\x61i.giskard.workerB\x0bWorkerProtoP\x01\xa2\x02\x03WRKb\x06proto3')



_LOADMODELREQUEST = DESCRIPTOR.message_types_by_name['LoadModelRequest']
_LOADMODELRESPONSE = DESCRIPTOR.message_types_by_name['LoadModelResponse']
_PREDICTREQUEST = DESCRIPTOR.message_types_by_name['PredictRequest']
_PREDICTREQUEST_FEATURESENTRY = _PREDICTREQUEST.nested_types_by_name['FeaturesEntry']
_PREDICTRESPONSE = DESCRIPTOR.message_types_by_name['PredictResponse']
_PREDICTRESPONSE_PROBABILITIESENTRY = _PREDICTRESPONSE.nested_types_by_name['ProbabilitiesEntry']
LoadModelRequest = _reflection.GeneratedProtocolMessageType('LoadModelRequest', (_message.Message,), {
  'DESCRIPTOR' : _LOADMODELREQUEST,
  '__module__' : 'ml_worker_pb2'
  # @@protoc_insertion_point(class_scope:worker.LoadModelRequest)
  })
_sym_db.RegisterMessage(LoadModelRequest)

LoadModelResponse = _reflection.GeneratedProtocolMessageType('LoadModelResponse', (_message.Message,), {
  'DESCRIPTOR' : _LOADMODELRESPONSE,
  '__module__' : 'ml_worker_pb2'
  # @@protoc_insertion_point(class_scope:worker.LoadModelResponse)
  })
_sym_db.RegisterMessage(LoadModelResponse)

PredictRequest = _reflection.GeneratedProtocolMessageType('PredictRequest', (_message.Message,), {

  'FeaturesEntry' : _reflection.GeneratedProtocolMessageType('FeaturesEntry', (_message.Message,), {
    'DESCRIPTOR' : _PREDICTREQUEST_FEATURESENTRY,
    '__module__' : 'ml_worker_pb2'
    # @@protoc_insertion_point(class_scope:worker.PredictRequest.FeaturesEntry)
    })
  ,
  'DESCRIPTOR' : _PREDICTREQUEST,
  '__module__' : 'ml_worker_pb2'
  # @@protoc_insertion_point(class_scope:worker.PredictRequest)
  })
_sym_db.RegisterMessage(PredictRequest)
_sym_db.RegisterMessage(PredictRequest.FeaturesEntry)

PredictResponse = _reflection.GeneratedProtocolMessageType('PredictResponse', (_message.Message,), {

  'ProbabilitiesEntry' : _reflection.GeneratedProtocolMessageType('ProbabilitiesEntry', (_message.Message,), {
    'DESCRIPTOR' : _PREDICTRESPONSE_PROBABILITIESENTRY,
    '__module__' : 'ml_worker_pb2'
    # @@protoc_insertion_point(class_scope:worker.PredictResponse.ProbabilitiesEntry)
    })
  ,
  'DESCRIPTOR' : _PREDICTRESPONSE,
  '__module__' : 'ml_worker_pb2'
  # @@protoc_insertion_point(class_scope:worker.PredictResponse)
  })
_sym_db.RegisterMessage(PredictResponse)
_sym_db.RegisterMessage(PredictResponse.ProbabilitiesEntry)

_MLWORKER = DESCRIPTOR.services_by_name['MLWorker']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\021ai.giskard.workerB\013WorkerProtoP\001\242\002\003WRK'
  _PREDICTREQUEST_FEATURESENTRY._options = None
  _PREDICTREQUEST_FEATURESENTRY._serialized_options = b'8\001'
  _PREDICTRESPONSE_PROBABILITIESENTRY._options = None
  _PREDICTRESPONSE_PROBABILITIESENTRY._serialized_options = b'8\001'
  _LOADMODELREQUEST._serialized_start=54
  _LOADMODELREQUEST._serialized_end=86
  _LOADMODELRESPONSE._serialized_start=88
  _LOADMODELRESPONSE._serialized_end=124
  _PREDICTREQUEST._serialized_start=127
  _PREDICTREQUEST._serialized_end=290
  _PREDICTREQUEST_FEATURESENTRY._serialized_start=221
  _PREDICTREQUEST_FEATURESENTRY._serialized_end=290
  _PREDICTRESPONSE._serialized_start=293
  _PREDICTRESPONSE._serialized_end=528
  _PREDICTRESPONSE_PROBABILITIESENTRY._serialized_start=462
  _PREDICTRESPONSE_PROBABILITIESENTRY._serialized_end=514
  _MLWORKER._serialized_start=531
  _MLWORKER._serialized_end=671
# @@protoc_insertion_point(module_scope)
