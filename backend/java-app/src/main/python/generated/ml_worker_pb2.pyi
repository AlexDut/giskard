"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class LoadModelRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text
    def __init__(self,
        *,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___LoadModelRequest = LoadModelRequest

class LoadModelResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MESSAGE_FIELD_NUMBER: builtins.int
    message: typing.Text
    def __init__(self,
        *,
        message: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["message",b"message"]) -> None: ...
global___LoadModelResponse = LoadModelResponse

class PredictRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class FeaturesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> google.protobuf.any_pb2.Any: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[google.protobuf.any_pb2.Any] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    MODEL_PATH_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    model_path: typing.Text
    @property
    def features(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.protobuf.any_pb2.Any]: ...
    def __init__(self,
        *,
        model_path: typing.Text = ...,
        features: typing.Optional[typing.Mapping[typing.Text, google.protobuf.any_pb2.Any]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["features",b"features","model_path",b"model_path"]) -> None: ...
global___PredictRequest = PredictRequest

class PredictResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class ProbabilitiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.float
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PREDICTION_INT_FIELD_NUMBER: builtins.int
    PREDICTION_FLOAT_FIELD_NUMBER: builtins.int
    PREDICTION_STRING_FIELD_NUMBER: builtins.int
    PROBABILITIES_FIELD_NUMBER: builtins.int
    prediction_int: builtins.int
    prediction_float: builtins.float
    prediction_string: typing.Text
    @property
    def probabilities(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.float]: ...
    def __init__(self,
        *,
        prediction_int: builtins.int = ...,
        prediction_float: builtins.float = ...,
        prediction_string: typing.Text = ...,
        probabilities: typing.Optional[typing.Mapping[typing.Text, builtins.float]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["prediction",b"prediction","prediction_float",b"prediction_float","prediction_int",b"prediction_int","prediction_string",b"prediction_string"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["prediction",b"prediction","prediction_float",b"prediction_float","prediction_int",b"prediction_int","prediction_string",b"prediction_string","probabilities",b"probabilities"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["prediction",b"prediction"]) -> typing.Optional[typing_extensions.Literal["prediction_int","prediction_float","prediction_string"]]: ...
global___PredictResponse = PredictResponse
