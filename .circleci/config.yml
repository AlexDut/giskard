# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# https://circleci.com/docs/reusing-config/#example-of-using-an-executor-declared-in-configyml-with-matrix-jobs
executors:
  # here we can define an executor that will be shared across different jobs
  ubuntu:
    parameters:
      python-version:
        description: "Python version"
        type: string
    docker:
      - image: cimg/python:<<parameters.python-version>>
        environment:
          GSK_DISABLE_ANALYTICS: "True"
          GISKARD_DEV_MODE: "True"
    # working_directory: /root/engine
    resource_class: medium
  # macos-3.10:
  #   macos:
  #     xcode: 14.2.0
  #   environment:
  #     GSK_DISABLE_ANALYTICS: "True"
  #     GISKARD_DEV_MODE: "True"
  #   # working_directory: /root/engine
  #   resource_class: medium
  # windows-3.10:
  #   windows:
  #     environment:
  #       GSK_DISABLE_ANALYTICS: "True"
  #       GISKARD_DEV_MODE: "True"
  #   # working_directory: /root/engine
  #   resource_class: medium

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  install:
    parameters:
      python-version:
        type: string
      os:
        type: string
    executor:
      name: <<parameters.os>>
      python-version: <<parameters.python-version>>
    steps:
      - checkout
      - run:
          name: Install PDM
          command: curl -sSL https://pdm-project.org/install-pdm.py | python3 -
      # Download and cache dependencies
      - restore_cache:
          keys:
            - python-<<parameters.os>>-<<parameters.python-version>>-{{ checksum "pdm.lock" }}
            - python-<<parameters.os>>-<<parameters.python-version>>
      - run:
          name: Install deps
          command: pdm install -G :all
      - save_cache:
          paths:
            - .venv
          key: python-<<parameters.os>>-<<parameters.python-version>>-{{ checksum "pdm.lock" }}
  unit-tests:
    parameters:
      python-version:
        type: string
      os:
        type: string
    executor:
      name: <<parameters.os>>
      python-version: <<parameters.python-version>>
    parallelism: 10
    steps:
      - checkout
      - run:
          name: Install PDM
          command: curl -sSL https://pdm-project.org/install-pdm.py | python3 -
      # Download and cache dependencies
      - restore_cache:
          keys:
            - python-<<parameters.os>>-<<parameters.python-version>>-{{ checksum "pdm.lock" }}
      - run:
          name: Run tests
          command: |
            mkdir -p test-results
            TEST=$(find ./tests -type f | grep '.py$' | grep -v __ | grep -v '/fixtures/' |  grep -v conftest | circleci tests split --split-by=timings)
            pdm base-test -m 'not slow' --junitxml=test-results/junit.xml $TEST

      - store_test_results:
          path: test-results

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  python-workflow:
    jobs:
      - install:
          name: install-<<matrix.os>>-<<matrix.python-version>>
          matrix:
            parameters:
              os: [ubuntu]
              python-version: ["3.9", "3.10", "3.11"]

      - unit-tests:
          name: test-<<matrix.os>>-<<matrix.python-version>>
          matrix:
            parameters:
              os: [ubuntu]
              python-version: ["3.9", "3.10", "3.11"]
          requires:
            - install-<<matrix.os>>-<<matrix.python-version>>
# https://circleci.com/docs/using-matrix-jobs/
# https://circleci.com/docs/configuration-reference/#dependencies-and-matrix-jobs