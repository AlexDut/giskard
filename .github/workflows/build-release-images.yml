name: Build Docker images

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    - name: Check output
      env:
        RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
      run: |
        echo $RELEASE_VERSION
        echo ${{ steps.vars.outputs.tag }}

#
#
#    - name: Extract branch name
#      shell: bash
#      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#      id: extract_branch
#
#    - name: Generate docker config file
#      env:
#        TAG: dev
#      run: |
#        sudo sysctl -w kernel.unprivileged_userns_clone=1
#        docker-compose -f docker-compose.yml -f docker-compose.dev.yml config > docker-stack.yml
#
#    - name: Build images
#      run: docker-compose -f docker-stack.yml build --parallel
#
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      if: ${{ steps.extract_branch.outputs.branch == 'main' }}
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: us-east-1
#
#    - name: Push images to ECR
#      if: ${{ steps.extract_branch.outputs.branch == 'main' }}
#      env:
#        TAG: dev
#      run: |
#        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/giskard
#        docker-compose -f docker-compose.yml -f docker-compose.dev.yml push
#
#    - name: Remove containers and volumes
#      run: docker-compose -f docker-stack.yml down -v --remove-orphans

